worker_processes  2;
error_log /dev/stderr warn;

events {
    worker_connections 1024;
}

http {
    log_format main '[$time_local] $remote_addr - $remote_user - $server_name  to: $upstream_addr: $request upstream_response_time $upstream_response_time msec $msec request_time $request_time';

    include /usr/local/openresty/nginx/conf/mime.types;
    sendfile on;

    access_log /dev/stdout main;
    lua_package_path "/usr/local/openresty/lualib/?.lua;;";

    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=cache:32m max_size=1g;


    upstream auth {
        server auth-server:8090;
    }

    upstream game {
        server game-server:8091;
    }



    server {
        listen 8080;
        server_name localhost;

        # static locations

        location / {
            root /static/core-ui;
            try_files $uri$args $uri$args/ /index.html;
            autoindex off;
            access_log off;
            expires max;
        }

        # api locations

        location ~ ^/api/auth(/token(?:\?.*)?)$ {
            if ($request_method != 'OPTIONS') {

            }

            proxy_pass http://auth$1$is_args$args;
        }

        location ~ ^/api/game(/games(?:\?.*)?)$ {
            if ($request_method != 'OPTIONS') {

                access_by_lua '
                    local jwt = require("security-jwt")

                    jwt.check({ "PLAYER", "ADMIN" })

                ';

            }

            proxy_pass http://game$1$is_args$args;
        }

        location ~ ^/api/game(/games/\w+(?:\?.*)?)$ {
            if ($request_method != 'OPTIONS') {

                access_by_lua '
                    local jwt = require("security-jwt")

                    jwt.check({ "PLAYER", "ADMIN" })

                ';

            }

            proxy_pass http://game$1$is_args$args;
        }


        location ~* ^/api {
            return 404;
        }


    }

}
